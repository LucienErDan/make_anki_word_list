import win32api, win32con, pywintypes
from tkinter import *
import threading


def show_word_to_position(ROOT, word, x=500, y=500):
    label = Label(ROOT, text='Text on the screen', font=('Times New Roman', '80'), fg='black', bg='white')
    label.master.overrideredirect(True)
    label.master.geometry("+250+250")
    label.master.lift()
    label.master.wm_attributes("-topmost", True)
    label.master.wm_attributes("-disabled", True)
    label.master.wm_attributes("-transparentcolor", "white")

    hWindow = pywintypes.HANDLE(int(label.master.frame(), 16))
    # http://msdn.microsoft.com/en-us/library/windows/desktop/ff700543(v=vs.85).aspx
    # The WS_EX_TRANSPARENT flag makes events (like mouse clicks) fall through the window.
    exStyle = win32con.WS_EX_COMPOSITED | win32con.WS_EX_LAYERED | win32con.WS_EX_NOACTIVATE | win32con.WS_EX_TOPMOST | win32con.WS_EX_TRANSPARENT
    win32api.SetWindowLong(hWindow, win32con.GWL_EXSTYLE, exStyle)
    return label


class Lable_Tread(threading.Thread):
    def __init__(self, word, x=500, y=500):
        threading.Thread.__init__(self)
        self.word = word
        self.x = x
        self.y = y
        self.root = Tk()
        self.loop_active = True
        self.start()

    def run(self):
        while self.loop_active:
            self.root.update()
            LABEL = show_word_to_position(self.root, self.word, self.x, self.y)
            LABEL.pack()

    def stop(self):
        self.loop_active = False


if __name__ == '__main__':
    import time
    lt = Lable_Tread('TESTTTEST')
    time.sleep(1)
    lt.stop()

    # ROOT = Tk()
    # LABEL = Label(ROOT, text="Hello, world!")
    # LABEL.pack()
    # LOOP_ACTIVE = True
    # while LOOP_ACTIVE:
    #     ROOT.update()
    #     USER_INPUT = 'd'
    #     if USER_INPUT == "exit":
    #         ROOT.quit()
    #         LOOP_ACTIVE = False
    #     else:
    #         LABEL = show_word_to_position(ROOT, 'asfas')
    #         LABEL.pack()
